"use strict";(self.webpackChunkcrewcrew=self.webpackChunkcrewcrew||[]).push([[647],{"./node_modules/@mantine/core/esm/components/Select/Select.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>Select});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),use_id=__webpack_require__("./node_modules/@mantine/hooks/esm/use-id/use-id.mjs"),use_uncontrolled=__webpack_require__("./node_modules/@mantine/hooks/esm/use-uncontrolled/use-uncontrolled.mjs");var use_resolved_styles_api=__webpack_require__("./node_modules/@mantine/core/esm/core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs"),use_props=__webpack_require__("./node_modules/@mantine/core/esm/core/MantineProvider/use-props/use-props.mjs"),factory=__webpack_require__("./node_modules/@mantine/core/esm/core/factory/factory.mjs");function parseItem(item){return"string"==typeof item?{value:item,label:item}:"value"in item&&!("label"in item)?{value:item.value,label:item.value,disabled:item.disabled}:"number"==typeof item?{value:item.toString(),label:item.toString()}:"group"in item?{group:item.group,items:item.items.map((i=>parseItem(i)))}:item}function getParsedComboboxData(data){return data?data.map((item=>parseItem(item))):[]}function getOptionsLockup(options){return options.reduce(((acc,item)=>"group"in item?{...acc,...getOptionsLockup(item.items)}:(acc[item.value]=item,acc)),{})}var rem=__webpack_require__("./node_modules/@mantine/core/esm/core/utils/units-converters/rem.mjs"),get_size=__webpack_require__("./node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs"),create_vars_resolver=__webpack_require__("./node_modules/@mantine/core/esm/core/styles-api/create-vars-resolver/create-vars-resolver.mjs"),use_styles=__webpack_require__("./node_modules/@mantine/core/esm/core/styles-api/use-styles/use-styles.mjs"),Popover=__webpack_require__("./node_modules/@mantine/core/esm/components/Popover/Popover.mjs"),create_safe_context=__webpack_require__("./node_modules/@mantine/core/esm/core/utils/create-safe-context/create-safe-context.mjs");const[ComboboxProvider,useComboboxContext]=(0,create_safe_context.F)("Combobox component was not found in tree");var Box=__webpack_require__("./node_modules/@mantine/core/esm/core/Box/Box.mjs"),classes={dropdown:"m_88b62a41",search:"m_985517d8",options:"m_b2821a6e",option:"m_92253aa5",empty:"m_2530cd1d",header:"m_858f94bd",footer:"m_82b967cb",group:"m_254f3e4f",groupLabel:"m_2bb2e9e5",chevron:"m_2943220b",optionsDropdownOption:"m_390b5f4",optionsDropdownCheckIcon:"m_8ee53fc2"};const defaultProps={error:null},varsResolver=(0,create_vars_resolver.V)(((_,{size})=>({chevron:{"--combobox-chevron-size":(0,get_size.YC)(size,"combobox-chevron-size")}}))),ComboboxChevron=(0,factory.P9)(((_props,ref)=>{const props=(0,use_props.Y)("ComboboxChevron",defaultProps,_props),{size,error,style,className,classNames,styles,unstyled,vars,mod,...others}=props,getStyles=(0,use_styles.I)({name:"ComboboxChevron",classes,props,style,className,classNames,styles,unstyled,vars,varsResolver,rootSelector:"chevron"});return(0,jsx_runtime.jsx)(Box.a,{component:"svg",...others,...getStyles("chevron"),size,viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",mod:["combobox-chevron",{error},mod],ref,children:(0,jsx_runtime.jsx)("path",{d:"M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})})}));ComboboxChevron.classes=classes,ComboboxChevron.displayName="@mantine/core/ComboboxChevron";var polymorphic_factory=__webpack_require__("./node_modules/@mantine/core/esm/core/factory/polymorphic-factory.mjs"),UnstyledButton=__webpack_require__("./node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.mjs");const CloseIcon=(0,react.forwardRef)((({size="var(--cb-icon-size, 70%)",style,...others},ref)=>(0,jsx_runtime.jsx)("svg",{viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",style:{...style,width:size,height:size},ref,...others,children:(0,jsx_runtime.jsx)("path",{d:"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})})));CloseIcon.displayName="@mantine/core/CloseIcon";var CloseButton_module_css_classes={root:"m_86a44da5","root--subtle":"m_220c80f2"};const CloseButton_defaultProps={variant:"subtle"},CloseButton_varsResolver=(0,create_vars_resolver.V)(((_,{size,radius,iconSize})=>({root:{"--cb-size":(0,get_size.YC)(size,"cb-size"),"--cb-radius":void 0===radius?void 0:(0,get_size.nJ)(radius),"--cb-icon-size":(0,rem.D)(iconSize)}}))),CloseButton=(0,polymorphic_factory.v)(((_props,ref)=>{const props=(0,use_props.Y)("CloseButton",CloseButton_defaultProps,_props),{iconSize,children,vars,radius,className,classNames,style,styles,unstyled,"data-disabled":dataDisabled,disabled,variant,icon,mod,...others}=props,getStyles=(0,use_styles.I)({name:"CloseButton",props,className,style,classes:CloseButton_module_css_classes,classNames,styles,unstyled,vars,varsResolver:CloseButton_varsResolver});return(0,jsx_runtime.jsxs)(UnstyledButton.N,{ref,...others,unstyled,variant,disabled,mod:[{disabled:disabled||dataDisabled},mod],...getStyles("root",{variant,active:!disabled&&!dataDisabled}),children:[icon||(0,jsx_runtime.jsx)(CloseIcon,{}),children]})}));CloseButton.classes=CloseButton_module_css_classes,CloseButton.displayName="@mantine/core/CloseButton";const ComboboxClearButton=(0,react.forwardRef)((({size,onMouseDown,onClick,onClear,...others},ref)=>(0,jsx_runtime.jsx)(CloseButton,{ref,size:size||"sm",variant:"transparent",tabIndex:-1,"aria-hidden":!0,...others,onMouseDown:event=>{event.preventDefault(),onMouseDown?.(event)},onClick:event=>{onClear(),onClick?.(event)}})));ComboboxClearButton.displayName="@mantine/core/ComboboxClearButton";const ComboboxDropdown_defaultProps={},ComboboxDropdown=(0,factory.P9)(((props,ref)=>{const{classNames,styles,className,style,hidden,...others}=(0,use_props.Y)("ComboboxDropdown",ComboboxDropdown_defaultProps,props),ctx=useComboboxContext();return(0,jsx_runtime.jsx)(Popover.A.Dropdown,{...others,ref,role:"presentation","data-hidden":hidden||void 0,...ctx.getStyles("dropdown",{className,style,classNames,styles})})}));ComboboxDropdown.classes=classes,ComboboxDropdown.displayName="@mantine/core/ComboboxDropdown";var is_element=__webpack_require__("./node_modules/@mantine/core/esm/core/utils/is-element/is-element.mjs");const ComboboxDropdownTarget_defaultProps={refProp:"ref"},ComboboxDropdownTarget=(0,factory.P9)(((props,ref)=>{const{children,refProp}=(0,use_props.Y)("ComboboxDropdownTarget",ComboboxDropdownTarget_defaultProps,props);if(useComboboxContext(),!(0,is_element.v)(children))throw new Error("Combobox.DropdownTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported");return(0,jsx_runtime.jsx)(Popover.A.Target,{ref,refProp,children})}));ComboboxDropdownTarget.displayName="@mantine/core/ComboboxDropdownTarget";const ComboboxEmpty_defaultProps={},ComboboxEmpty=(0,factory.P9)(((props,ref)=>{const{classNames,className,style,styles,vars,...others}=(0,use_props.Y)("ComboboxEmpty",ComboboxEmpty_defaultProps,props),ctx=useComboboxContext();return(0,jsx_runtime.jsx)(Box.a,{ref,...ctx.getStyles("empty",{className,classNames,styles,style}),...others})}));ComboboxEmpty.classes=classes,ComboboxEmpty.displayName="@mantine/core/ComboboxEmpty";var use_merged_ref=__webpack_require__("./node_modules/@mantine/hooks/esm/use-merged-ref/use-merged-ref.mjs");function useComboboxTargetProps({onKeyDown,withKeyboardNavigation,withAriaAttributes,withExpandedAttribute,targetType,autoComplete}){const ctx=useComboboxContext(),[selectedOptionId,setSelectedOptionId]=(0,react.useState)(null);return{...withAriaAttributes?{"aria-haspopup":"listbox","aria-expanded":withExpandedAttribute&&!(!ctx.store.listId||!ctx.store.dropdownOpened)||void 0,"aria-controls":ctx.store.listId,"aria-activedescendant":ctx.store.dropdownOpened&&selectedOptionId||void 0,autoComplete,"data-expanded":ctx.store.dropdownOpened||void 0,"data-mantine-stop-propagation":ctx.store.dropdownOpened||void 0}:{},onKeyDown:event=>{if(onKeyDown?.(event),!ctx.readOnly&&withKeyboardNavigation){if(event.nativeEvent.isComposing)return;if("ArrowDown"===event.nativeEvent.code&&(event.preventDefault(),ctx.store.dropdownOpened?setSelectedOptionId(ctx.store.selectNextOption()):(ctx.store.openDropdown("keyboard"),setSelectedOptionId(ctx.store.selectActiveOption()))),"ArrowUp"===event.nativeEvent.code&&(event.preventDefault(),ctx.store.dropdownOpened?setSelectedOptionId(ctx.store.selectPreviousOption()):(ctx.store.openDropdown("keyboard"),setSelectedOptionId(ctx.store.selectActiveOption()))),"Enter"===event.nativeEvent.code||"NumpadEnter"===event.nativeEvent.code){if(229===event.nativeEvent.keyCode)return;const selectedOptionIndex=ctx.store.getSelectedOptionIndex();ctx.store.dropdownOpened&&-1!==selectedOptionIndex?(event.preventDefault(),ctx.store.clickSelectedOption()):"button"===targetType&&(event.preventDefault(),ctx.store.openDropdown("keyboard"))}"Escape"===event.nativeEvent.code&&ctx.store.closeDropdown("keyboard"),"Space"===event.nativeEvent.code&&"button"===targetType&&(event.preventDefault(),ctx.store.toggleDropdown("keyboard"))}}}}const ComboboxEventsTarget_defaultProps={refProp:"ref",targetType:"input",withKeyboardNavigation:!0,withAriaAttributes:!0,withExpandedAttribute:!1,autoComplete:"off"},ComboboxEventsTarget=(0,factory.P9)(((props,ref)=>{const{children,refProp,withKeyboardNavigation,withAriaAttributes,withExpandedAttribute,targetType,autoComplete,...others}=(0,use_props.Y)("ComboboxEventsTarget",ComboboxEventsTarget_defaultProps,props);if(!(0,is_element.v)(children))throw new Error("Combobox.EventsTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported");const ctx=useComboboxContext(),targetProps=useComboboxTargetProps({targetType,withAriaAttributes,withKeyboardNavigation,withExpandedAttribute,onKeyDown:children.props.onKeyDown,autoComplete});return(0,react.cloneElement)(children,{...targetProps,...others,[refProp]:(0,use_merged_ref.pc)(ref,ctx.store.targetRef,children?.ref)})}));ComboboxEventsTarget.displayName="@mantine/core/ComboboxEventsTarget";const ComboboxFooter_defaultProps={},ComboboxFooter=(0,factory.P9)(((props,ref)=>{const{classNames,className,style,styles,vars,...others}=(0,use_props.Y)("ComboboxFooter",ComboboxFooter_defaultProps,props),ctx=useComboboxContext();return(0,jsx_runtime.jsx)(Box.a,{ref,...ctx.getStyles("footer",{className,classNames,style,styles}),...others,onMouseDown:event=>{event.preventDefault()}})}));ComboboxFooter.classes=classes,ComboboxFooter.displayName="@mantine/core/ComboboxFooter";const ComboboxGroup_defaultProps={},ComboboxGroup=(0,factory.P9)(((props,ref)=>{const{classNames,className,style,styles,vars,children,label,...others}=(0,use_props.Y)("ComboboxGroup",ComboboxGroup_defaultProps,props),ctx=useComboboxContext();return(0,jsx_runtime.jsxs)(Box.a,{ref,...ctx.getStyles("group",{className,classNames,style,styles}),...others,children:[label&&(0,jsx_runtime.jsx)("div",{...ctx.getStyles("groupLabel",{classNames,styles}),children:label}),children]})}));ComboboxGroup.classes=classes,ComboboxGroup.displayName="@mantine/core/ComboboxGroup";const ComboboxHeader_defaultProps={},ComboboxHeader=(0,factory.P9)(((props,ref)=>{const{classNames,className,style,styles,vars,...others}=(0,use_props.Y)("ComboboxHeader",ComboboxHeader_defaultProps,props),ctx=useComboboxContext();return(0,jsx_runtime.jsx)(Box.a,{ref,...ctx.getStyles("header",{className,classNames,style,styles}),...others,onMouseDown:event=>{event.preventDefault()}})}));function ComboboxHiddenInput({value,valuesDivider=",",...others}){return(0,jsx_runtime.jsx)("input",{type:"hidden",value:Array.isArray(value)?value.join(valuesDivider):value||"",...others})}ComboboxHeader.classes=classes,ComboboxHeader.displayName="@mantine/core/ComboboxHeader",ComboboxHiddenInput.displayName="@mantine/core/ComboboxHiddenInput";const ComboboxOption_defaultProps={},ComboboxOption=(0,factory.P9)(((_props,ref)=>{const props=(0,use_props.Y)("ComboboxOption",ComboboxOption_defaultProps,_props),{classNames,className,style,styles,vars,onClick,id,active,onMouseDown,onMouseOver,disabled,selected,mod,...others}=props,ctx=useComboboxContext(),uuid=(0,react.useId)(),_id=id||uuid;return(0,jsx_runtime.jsx)(Box.a,{...ctx.getStyles("option",{className,classNames,styles,style}),...others,ref,id:_id,mod:["combobox-option",{"combobox-active":active,"combobox-disabled":disabled,"combobox-selected":selected},mod],role:"option",onClick:event=>{disabled?event.preventDefault():(ctx.onOptionSubmit?.(props.value,props),onClick?.(event))},onMouseDown:event=>{event.preventDefault(),onMouseDown?.(event)},onMouseOver:event=>{ctx.resetSelectionOnOptionHover&&ctx.store.resetSelectedOption(),onMouseOver?.(event)}})}));ComboboxOption.classes=classes,ComboboxOption.displayName="@mantine/core/ComboboxOption";const ComboboxOptions_defaultProps={},ComboboxOptions=(0,factory.P9)(((_props,ref)=>{const props=(0,use_props.Y)("ComboboxOptions",ComboboxOptions_defaultProps,_props),{classNames,className,style,styles,id,onMouseDown,labelledBy,...others}=props,ctx=useComboboxContext(),_id=(0,use_id.B)(id);return(0,react.useEffect)((()=>{ctx.store.setListId(_id)}),[_id]),(0,jsx_runtime.jsx)(Box.a,{ref,...ctx.getStyles("options",{className,style,classNames,styles}),...others,id:_id,role:"listbox","aria-labelledby":labelledBy,onMouseDown:event=>{event.preventDefault(),onMouseDown?.(event)}})}));ComboboxOptions.classes=classes,ComboboxOptions.displayName="@mantine/core/ComboboxOptions";var Input=__webpack_require__("./node_modules/@mantine/core/esm/components/Input/Input.mjs");const ComboboxSearch_defaultProps={withAriaAttributes:!0,withKeyboardNavigation:!0},ComboboxSearch=(0,factory.P9)(((_props,ref)=>{const props=(0,use_props.Y)("ComboboxSearch",ComboboxSearch_defaultProps,_props),{classNames,styles,unstyled,vars,withAriaAttributes,onKeyDown,withKeyboardNavigation,size,...others}=props,ctx=useComboboxContext(),_styles=ctx.getStyles("search"),targetProps=useComboboxTargetProps({targetType:"input",withAriaAttributes,withKeyboardNavigation,withExpandedAttribute:!1,onKeyDown,autoComplete:"off"});return(0,jsx_runtime.jsx)(Input.p,{ref:(0,use_merged_ref.pc)(ref,ctx.store.searchRef),classNames:[{input:_styles.className},classNames],styles:[{input:_styles.style},styles],size:size||ctx.size,...targetProps,...others,__staticSelector:"Combobox"})}));ComboboxSearch.classes=classes,ComboboxSearch.displayName="@mantine/core/ComboboxSearch";const ComboboxTarget_defaultProps={refProp:"ref",targetType:"input",withKeyboardNavigation:!0,withAriaAttributes:!0,withExpandedAttribute:!1,autoComplete:"off"},ComboboxTarget=(0,factory.P9)(((props,ref)=>{const{children,refProp,withKeyboardNavigation,withAriaAttributes,withExpandedAttribute,targetType,autoComplete,...others}=(0,use_props.Y)("ComboboxTarget",ComboboxTarget_defaultProps,props);if(!(0,is_element.v)(children))throw new Error("Combobox.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported");const ctx=useComboboxContext(),targetProps=useComboboxTargetProps({targetType,withAriaAttributes,withKeyboardNavigation,withExpandedAttribute,onKeyDown:children.props.onKeyDown,autoComplete}),clonedElement=(0,react.cloneElement)(children,{...targetProps,...others});return(0,jsx_runtime.jsx)(Popover.A.Target,{ref:(0,use_merged_ref.pc)(ref,ctx.store.targetRef),children:clonedElement})}));function useCombobox({defaultOpened,opened,onOpenedChange,onDropdownClose,onDropdownOpen,loop=!0,scrollBehavior="instant"}={}){const[dropdownOpened,setDropdownOpened]=(0,use_uncontrolled.Z)({value:opened,defaultValue:defaultOpened,finalValue:!1,onChange:onOpenedChange}),listId=(0,react.useRef)(null),selectedOptionIndex=(0,react.useRef)(-1),searchRef=(0,react.useRef)(null),targetRef=(0,react.useRef)(null),focusSearchTimeout=(0,react.useRef)(-1),focusTargetTimeout=(0,react.useRef)(-1),selectedIndexUpdateTimeout=(0,react.useRef)(-1),openDropdown=(0,react.useCallback)(((eventSource="unknown")=>{dropdownOpened||(setDropdownOpened(!0),onDropdownOpen?.(eventSource))}),[setDropdownOpened,onDropdownOpen,dropdownOpened]),closeDropdown=(0,react.useCallback)(((eventSource="unknown")=>{dropdownOpened&&(setDropdownOpened(!1),onDropdownClose?.(eventSource))}),[setDropdownOpened,onDropdownClose,dropdownOpened]),toggleDropdown=(0,react.useCallback)(((eventSource="unknown")=>{dropdownOpened?closeDropdown(eventSource):openDropdown(eventSource)}),[closeDropdown,openDropdown,dropdownOpened]),clearSelectedItem=(0,react.useCallback)((()=>{const selected=document.querySelector(`#${listId.current} [data-combobox-selected]`);selected?.removeAttribute("data-combobox-selected"),selected?.removeAttribute("aria-selected")}),[]),selectOption=(0,react.useCallback)((index=>{const list=document.getElementById(listId.current),items=list?.querySelectorAll("[data-combobox-option]");if(!items)return null;const nextIndex=index>=items.length?0:index<0?items.length-1:index;return selectedOptionIndex.current=nextIndex,items?.[nextIndex]&&!items[nextIndex].hasAttribute("data-combobox-disabled")?(clearSelectedItem(),items[nextIndex].setAttribute("data-combobox-selected","true"),items[nextIndex].setAttribute("aria-selected","true"),items[nextIndex].scrollIntoView({block:"nearest",behavior:scrollBehavior}),items[nextIndex].id):null}),[scrollBehavior,clearSelectedItem]),selectActiveOption=(0,react.useCallback)((()=>{const activeOption=document.querySelector(`#${listId.current} [data-combobox-active]`);if(activeOption){const items=document.querySelectorAll(`#${listId.current} [data-combobox-option]`),index=Array.from(items).findIndex((option=>option===activeOption));return selectOption(index)}return selectOption(0)}),[selectOption]),selectNextOption=(0,react.useCallback)((()=>selectOption(function getNextIndex(currentIndex,elements,loop){for(let i=currentIndex+1;i<elements.length;i+=1)if(!elements[i].hasAttribute("data-combobox-disabled"))return i;if(loop)for(let i=0;i<elements.length;i+=1)if(!elements[i].hasAttribute("data-combobox-disabled"))return i;return currentIndex}(selectedOptionIndex.current,document.querySelectorAll(`#${listId.current} [data-combobox-option]`),loop))),[selectOption,loop]),selectPreviousOption=(0,react.useCallback)((()=>selectOption(function getPreviousIndex(currentIndex,elements,loop){for(let i=currentIndex-1;i>=0;i-=1)if(!elements[i].hasAttribute("data-combobox-disabled"))return i;if(loop)for(let i=elements.length-1;i>-1;i-=1)if(!elements[i].hasAttribute("data-combobox-disabled"))return i;return currentIndex}(selectedOptionIndex.current,document.querySelectorAll(`#${listId.current} [data-combobox-option]`),loop))),[selectOption,loop]),selectFirstOption=(0,react.useCallback)((()=>selectOption(function getFirstIndex(elements){for(let i=0;i<elements.length;i+=1)if(!elements[i].hasAttribute("data-combobox-disabled"))return i;return-1}(document.querySelectorAll(`#${listId.current} [data-combobox-option]`)))),[selectOption]),updateSelectedOptionIndex=(0,react.useCallback)(((target="selected",options)=>{selectedIndexUpdateTimeout.current=window.setTimeout((()=>{const items=document.querySelectorAll(`#${listId.current} [data-combobox-option]`),index=Array.from(items).findIndex((option=>option.hasAttribute(`data-combobox-${target}`)));selectedOptionIndex.current=index,options?.scrollIntoView&&items[index]?.scrollIntoView({block:"nearest",behavior:scrollBehavior})}),0)}),[]),resetSelectedOption=(0,react.useCallback)((()=>{selectedOptionIndex.current=-1,clearSelectedItem()}),[clearSelectedItem]),clickSelectedOption=(0,react.useCallback)((()=>{const items=document.querySelectorAll(`#${listId.current} [data-combobox-option]`),item=items?.[selectedOptionIndex.current];item?.click()}),[]),setListId=(0,react.useCallback)((id=>{listId.current=id}),[]),focusSearchInput=(0,react.useCallback)((()=>{focusSearchTimeout.current=window.setTimeout((()=>searchRef.current.focus()),0)}),[]),focusTarget=(0,react.useCallback)((()=>{focusTargetTimeout.current=window.setTimeout((()=>targetRef.current.focus()),0)}),[]),getSelectedOptionIndex=(0,react.useCallback)((()=>selectedOptionIndex.current),[]);return(0,react.useEffect)((()=>()=>{window.clearTimeout(focusSearchTimeout.current),window.clearTimeout(focusTargetTimeout.current),window.clearTimeout(selectedIndexUpdateTimeout.current)}),[]),{dropdownOpened,openDropdown,closeDropdown,toggleDropdown,selectedOptionIndex:selectedOptionIndex.current,getSelectedOptionIndex,selectOption,selectFirstOption,selectActiveOption,selectNextOption,selectPreviousOption,resetSelectedOption,updateSelectedOptionIndex,listId:listId.current,setListId,clickSelectedOption,searchRef,focusSearchInput,targetRef,focusTarget}}ComboboxTarget.displayName="@mantine/core/ComboboxTarget";const Combobox_defaultProps={keepMounted:!0,withinPortal:!0,resetSelectionOnOptionHover:!1,width:"target",transitionProps:{transition:"fade",duration:0}},Combobox_varsResolver=(0,create_vars_resolver.V)(((_,{size,dropdownPadding})=>({options:{"--combobox-option-fz":(0,get_size.ny)(size),"--combobox-option-padding":(0,get_size.YC)(size,"combobox-option-padding")},dropdown:{"--combobox-padding":void 0===dropdownPadding?void 0:(0,rem.D)(dropdownPadding),"--combobox-option-fz":(0,get_size.ny)(size),"--combobox-option-padding":(0,get_size.YC)(size,"combobox-option-padding")}})));function Combobox(_props){const props=(0,use_props.Y)("Combobox",Combobox_defaultProps,_props),{classNames,styles,unstyled,children,store:controlledStore,vars,onOptionSubmit,onClose,size,dropdownPadding,resetSelectionOnOptionHover,__staticSelector,readOnly,...others}=props,uncontrolledStore=useCombobox(),store=controlledStore||uncontrolledStore,getStyles=(0,use_styles.I)({name:__staticSelector||"Combobox",classes,props,classNames,styles,unstyled,vars,varsResolver:Combobox_varsResolver});return(0,jsx_runtime.jsx)(ComboboxProvider,{value:{getStyles,store,onOptionSubmit,size,resetSelectionOnOptionHover,readOnly},children:(0,jsx_runtime.jsx)(Popover.A,{opened:store.dropdownOpened,...others,onClose:()=>{onClose?.(),store.closeDropdown()},withRoles:!1,unstyled,children})})}Combobox.extend=c=>c,Combobox.classes=classes,Combobox.displayName="@mantine/core/Combobox",Combobox.Target=ComboboxTarget,Combobox.Dropdown=ComboboxDropdown,Combobox.Options=ComboboxOptions,Combobox.Option=ComboboxOption,Combobox.Search=ComboboxSearch,Combobox.Empty=ComboboxEmpty,Combobox.Chevron=ComboboxChevron,Combobox.Footer=ComboboxFooter,Combobox.Header=ComboboxHeader,Combobox.EventsTarget=ComboboxEventsTarget,Combobox.DropdownTarget=ComboboxDropdownTarget,Combobox.Group=ComboboxGroup,Combobox.ClearButton=ComboboxClearButton,Combobox.HiddenInput=ComboboxHiddenInput;var clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs");function CheckIcon({size,style,...others}){const _style=void 0!==size?{width:(0,rem.D)(size),height:(0,rem.D)(size),...style}:style;return(0,jsx_runtime.jsx)("svg",{viewBox:"0 0 10 7",fill:"none",xmlns:"http://www.w3.org/2000/svg",style:_style,"aria-hidden":!0,...others,children:(0,jsx_runtime.jsx)("path",{d:"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})})}const[ScrollAreaProvider,useScrollAreaContext]=(0,create_safe_context.F)("ScrollArea.Root component was not found in tree");function useCallbackRef(callback){const callbackRef=(0,react.useRef)(callback);return(0,react.useEffect)((()=>{callbackRef.current=callback})),(0,react.useMemo)((()=>(...args)=>callbackRef.current?.(...args)),[])}var use_isomorphic_effect=__webpack_require__("./node_modules/@mantine/hooks/esm/use-isomorphic-effect/use-isomorphic-effect.mjs");function useResizeObserver(element,onResize){const handleResize=useCallbackRef(onResize);(0,use_isomorphic_effect.o)((()=>{let rAF=0;if(element){const resizeObserver=new ResizeObserver((()=>{cancelAnimationFrame(rAF),rAF=window.requestAnimationFrame(handleResize)}));return resizeObserver.observe(element),()=>{window.cancelAnimationFrame(rAF),resizeObserver.unobserve(element)}}}),[element,handleResize])}const Corner=(0,react.forwardRef)(((props,ref)=>{const{style,...others}=props,ctx=useScrollAreaContext(),[width,setWidth]=(0,react.useState)(0),[height,setHeight]=(0,react.useState)(0),hasSize=Boolean(width&&height);return useResizeObserver(ctx.scrollbarX,(()=>{const h=ctx.scrollbarX?.offsetHeight||0;ctx.onCornerHeightChange(h),setHeight(h)})),useResizeObserver(ctx.scrollbarY,(()=>{const w=ctx.scrollbarY?.offsetWidth||0;ctx.onCornerWidthChange(w),setWidth(w)})),hasSize?(0,jsx_runtime.jsx)("div",{...others,ref,style:{...style,width,height}}):null})),ScrollAreaCorner=(0,react.forwardRef)(((props,ref)=>{const ctx=useScrollAreaContext(),hasBothScrollbarsVisible=Boolean(ctx.scrollbarX&&ctx.scrollbarY);return"scroll"!==ctx.type&&hasBothScrollbarsVisible?(0,jsx_runtime.jsx)(Corner,{...props,ref}):null})),ScrollAreaRoot_defaultProps={scrollHideDelay:1e3,type:"hover"},ScrollAreaRoot=(0,react.forwardRef)(((_props,ref)=>{const props=(0,use_props.Y)("ScrollAreaRoot",ScrollAreaRoot_defaultProps,_props),{type,scrollHideDelay,scrollbars,...others}=props,[scrollArea,setScrollArea]=(0,react.useState)(null),[viewport,setViewport]=(0,react.useState)(null),[content,setContent]=(0,react.useState)(null),[scrollbarX,setScrollbarX]=(0,react.useState)(null),[scrollbarY,setScrollbarY]=(0,react.useState)(null),[cornerWidth,setCornerWidth]=(0,react.useState)(0),[cornerHeight,setCornerHeight]=(0,react.useState)(0),[scrollbarXEnabled,setScrollbarXEnabled]=(0,react.useState)(!1),[scrollbarYEnabled,setScrollbarYEnabled]=(0,react.useState)(!1),rootRef=(0,use_merged_ref.pc)(ref,(node=>setScrollArea(node)));return(0,jsx_runtime.jsx)(ScrollAreaProvider,{value:{type,scrollHideDelay,scrollArea,viewport,onViewportChange:setViewport,content,onContentChange:setContent,scrollbarX,onScrollbarXChange:setScrollbarX,scrollbarXEnabled,onScrollbarXEnabledChange:setScrollbarXEnabled,scrollbarY,onScrollbarYChange:setScrollbarY,scrollbarYEnabled,onScrollbarYEnabledChange:setScrollbarYEnabled,onCornerWidthChange:setCornerWidth,onCornerHeightChange:setCornerHeight},children:(0,jsx_runtime.jsx)(Box.a,{...others,ref:rootRef,__vars:{"--sa-corner-width":"xy"!==scrollbars?"0px":`${cornerWidth}px`,"--sa-corner-height":"xy"!==scrollbars?"0px":`${cornerHeight}px`}})})}));function useDebouncedCallback(callback,delay){const handleCallback=useCallbackRef(callback),debounceTimerRef=(0,react.useRef)(0);return(0,react.useEffect)((()=>()=>window.clearTimeout(debounceTimerRef.current)),[]),(0,react.useCallback)(((...args)=>{window.clearTimeout(debounceTimerRef.current),debounceTimerRef.current=window.setTimeout((()=>handleCallback(...args)),delay)}),[handleCallback,delay])}ScrollAreaRoot.displayName="@mantine/core/ScrollAreaRoot";var DirectionProvider=__webpack_require__("./node_modules/@mantine/core/esm/core/DirectionProvider/DirectionProvider.mjs");function getThumbRatio(viewportSize,contentSize){const ratio=viewportSize/contentSize;return Number.isNaN(ratio)?0:ratio}function getThumbSize(sizes){const ratio=getThumbRatio(sizes.viewport,sizes.content),scrollbarPadding=sizes.scrollbar.paddingStart+sizes.scrollbar.paddingEnd,thumbSize=(sizes.scrollbar.size-scrollbarPadding)*ratio;return Math.max(thumbSize,18)}function linearScale(input,output){return value=>{if(input[0]===input[1]||output[0]===output[1])return output[0];const ratio=(output[1]-output[0])/(input[1]-input[0]);return output[0]+ratio*(value-input[0])}}function getThumbOffsetFromScroll(scrollPos,sizes,dir="ltr"){const thumbSizePx=getThumbSize(sizes),scrollbarPadding=sizes.scrollbar.paddingStart+sizes.scrollbar.paddingEnd,scrollbar=sizes.scrollbar.size-scrollbarPadding,maxScrollPos=sizes.content-sizes.viewport,maxThumbPos=scrollbar-thumbSizePx,scrollWithoutMomentum=function clamp(value,[min,max]){return Math.min(max,Math.max(min,value))}(scrollPos,"ltr"===dir?[0,maxScrollPos]:[-1*maxScrollPos,0]);return linearScale([0,maxScrollPos],[0,maxThumbPos])(scrollWithoutMomentum)}function isScrollingWithinScrollbarBounds(scrollPos,maxScrollPos){return scrollPos>0&&scrollPos<maxScrollPos}function toInt(value){return value?parseInt(value,10):0}function composeEventHandlers(originalEventHandler,ourEventHandler,{checkForDefaultPrevented=!0}={}){return event=>{originalEventHandler?.(event),!1!==checkForDefaultPrevented&&event.defaultPrevented||ourEventHandler?.(event)}}const[ScrollbarProvider,useScrollbarContext]=(0,create_safe_context.F)("ScrollAreaScrollbar was not found in tree"),Scrollbar=(0,react.forwardRef)(((props,forwardedRef)=>{const{sizes,hasThumb,onThumbChange,onThumbPointerUp,onThumbPointerDown,onThumbPositionChange,onDragScroll,onWheelScroll,onResize,...scrollbarProps}=props,context=useScrollAreaContext(),[scrollbar,setScrollbar]=(0,react.useState)(null),composeRefs=(0,use_merged_ref.pc)(forwardedRef,(node=>setScrollbar(node))),rectRef=(0,react.useRef)(null),prevWebkitUserSelectRef=(0,react.useRef)(""),{viewport}=context,maxScrollPos=sizes.content-sizes.viewport,handleWheelScroll=useCallbackRef(onWheelScroll),handleThumbPositionChange=useCallbackRef(onThumbPositionChange),handleResize=useDebouncedCallback(onResize,10),handleDragScroll=event=>{if(rectRef.current){const x=event.clientX-rectRef.current.left,y=event.clientY-rectRef.current.top;onDragScroll({x,y})}};return(0,react.useEffect)((()=>{const handleWheel=event=>{const element=event.target,isScrollbarWheel=scrollbar?.contains(element);isScrollbarWheel&&handleWheelScroll(event,maxScrollPos)};return document.addEventListener("wheel",handleWheel,{passive:!1}),()=>document.removeEventListener("wheel",handleWheel,{passive:!1})}),[viewport,scrollbar,maxScrollPos,handleWheelScroll]),(0,react.useEffect)(handleThumbPositionChange,[sizes,handleThumbPositionChange]),useResizeObserver(scrollbar,handleResize),useResizeObserver(context.content,handleResize),(0,jsx_runtime.jsx)(ScrollbarProvider,{value:{scrollbar,hasThumb,onThumbChange:useCallbackRef(onThumbChange),onThumbPointerUp:useCallbackRef(onThumbPointerUp),onThumbPositionChange:handleThumbPositionChange,onThumbPointerDown:useCallbackRef(onThumbPointerDown)},children:(0,jsx_runtime.jsx)("div",{...scrollbarProps,ref:composeRefs,"data-mantine-scrollbar":!0,style:{position:"absolute",...scrollbarProps.style},onPointerDown:composeEventHandlers(props.onPointerDown,(event=>{event.preventDefault();if(0===event.button){event.target.setPointerCapture(event.pointerId),rectRef.current=scrollbar.getBoundingClientRect(),prevWebkitUserSelectRef.current=document.body.style.webkitUserSelect,document.body.style.webkitUserSelect="none",handleDragScroll(event)}})),onPointerMove:composeEventHandlers(props.onPointerMove,handleDragScroll),onPointerUp:composeEventHandlers(props.onPointerUp,(event=>{event.preventDefault();const element=event.target;element.hasPointerCapture(event.pointerId)&&element.releasePointerCapture(event.pointerId),document.body.style.webkitUserSelect=prevWebkitUserSelectRef.current,rectRef.current=null}))})})})),ScrollAreaScrollbarX=(0,react.forwardRef)(((props,forwardedRef)=>{const{sizes,onSizesChange,style,...others}=props,ctx=useScrollAreaContext(),[computedStyle,setComputedStyle]=(0,react.useState)(),ref=(0,react.useRef)(null),composeRefs=(0,use_merged_ref.pc)(forwardedRef,ref,ctx.onScrollbarXChange);return(0,react.useEffect)((()=>{ref.current&&setComputedStyle(getComputedStyle(ref.current))}),[ref]),(0,jsx_runtime.jsx)(Scrollbar,{"data-orientation":"horizontal",...others,ref:composeRefs,sizes,style:{...style,"--sa-thumb-width":`${getThumbSize(sizes)}px`},onThumbPointerDown:pointerPos=>props.onThumbPointerDown(pointerPos.x),onDragScroll:pointerPos=>props.onDragScroll(pointerPos.x),onWheelScroll:(event,maxScrollPos)=>{if(ctx.viewport){const scrollPos=ctx.viewport.scrollLeft+event.deltaX;props.onWheelScroll(scrollPos),isScrollingWithinScrollbarBounds(scrollPos,maxScrollPos)&&event.preventDefault()}},onResize:()=>{ref.current&&ctx.viewport&&computedStyle&&onSizesChange({content:ctx.viewport.scrollWidth,viewport:ctx.viewport.offsetWidth,scrollbar:{size:ref.current.clientWidth,paddingStart:toInt(computedStyle.paddingLeft),paddingEnd:toInt(computedStyle.paddingRight)}})}})}));ScrollAreaScrollbarX.displayName="@mantine/core/ScrollAreaScrollbarX";const ScrollAreaScrollbarY=(0,react.forwardRef)(((props,forwardedRef)=>{const{sizes,onSizesChange,style,...others}=props,context=useScrollAreaContext(),[computedStyle,setComputedStyle]=(0,react.useState)(),ref=(0,react.useRef)(null),composeRefs=(0,use_merged_ref.pc)(forwardedRef,ref,context.onScrollbarYChange);return(0,react.useEffect)((()=>{ref.current&&setComputedStyle(window.getComputedStyle(ref.current))}),[]),(0,jsx_runtime.jsx)(Scrollbar,{...others,"data-orientation":"vertical",ref:composeRefs,sizes,style:{"--sa-thumb-height":`${getThumbSize(sizes)}px`,...style},onThumbPointerDown:pointerPos=>props.onThumbPointerDown(pointerPos.y),onDragScroll:pointerPos=>props.onDragScroll(pointerPos.y),onWheelScroll:(event,maxScrollPos)=>{if(context.viewport){const scrollPos=context.viewport.scrollTop+event.deltaY;props.onWheelScroll(scrollPos),isScrollingWithinScrollbarBounds(scrollPos,maxScrollPos)&&event.preventDefault()}},onResize:()=>{ref.current&&context.viewport&&computedStyle&&onSizesChange({content:context.viewport.scrollHeight,viewport:context.viewport.offsetHeight,scrollbar:{size:ref.current.clientHeight,paddingStart:toInt(computedStyle.paddingTop),paddingEnd:toInt(computedStyle.paddingBottom)}})}})}));ScrollAreaScrollbarY.displayName="@mantine/core/ScrollAreaScrollbarY";const ScrollAreaScrollbarVisible=(0,react.forwardRef)(((props,forwardedRef)=>{const{orientation="vertical",...scrollbarProps}=props,{dir}=(0,DirectionProvider.jH)(),context=useScrollAreaContext(),thumbRef=(0,react.useRef)(null),pointerOffsetRef=(0,react.useRef)(0),[sizes,setSizes]=(0,react.useState)({content:0,viewport:0,scrollbar:{size:0,paddingStart:0,paddingEnd:0}}),thumbRatio=getThumbRatio(sizes.viewport,sizes.content),commonProps={...scrollbarProps,sizes,onSizesChange:setSizes,hasThumb:Boolean(thumbRatio>0&&thumbRatio<1),onThumbChange:thumb=>{thumbRef.current=thumb},onThumbPointerUp:()=>{pointerOffsetRef.current=0},onThumbPointerDown:pointerPos=>{pointerOffsetRef.current=pointerPos}},getScrollPosition=(pointerPos,direction)=>function getScrollPositionFromPointer(pointerPos,pointerOffset,sizes,dir="ltr"){const thumbSizePx=getThumbSize(sizes),offset=pointerOffset||thumbSizePx/2,thumbOffsetFromEnd=thumbSizePx-offset,minPointerPos=sizes.scrollbar.paddingStart+offset,maxPointerPos=sizes.scrollbar.size-sizes.scrollbar.paddingEnd-thumbOffsetFromEnd,maxScrollPos=sizes.content-sizes.viewport;return linearScale([minPointerPos,maxPointerPos],"ltr"===dir?[0,maxScrollPos]:[-1*maxScrollPos,0])(pointerPos)}(pointerPos,pointerOffsetRef.current,sizes,direction);return"horizontal"===orientation?(0,jsx_runtime.jsx)(ScrollAreaScrollbarX,{...commonProps,ref:forwardedRef,onThumbPositionChange:()=>{if(context.viewport&&thumbRef.current){const offset=getThumbOffsetFromScroll(context.viewport.scrollLeft,sizes,dir);thumbRef.current.style.transform=`translate3d(${offset}px, 0, 0)`}},onWheelScroll:scrollPos=>{context.viewport&&(context.viewport.scrollLeft=scrollPos)},onDragScroll:pointerPos=>{context.viewport&&(context.viewport.scrollLeft=getScrollPosition(pointerPos,dir))}}):"vertical"===orientation?(0,jsx_runtime.jsx)(ScrollAreaScrollbarY,{...commonProps,ref:forwardedRef,onThumbPositionChange:()=>{if(context.viewport&&thumbRef.current){const offset=getThumbOffsetFromScroll(context.viewport.scrollTop,sizes);0===sizes.scrollbar.size?thumbRef.current.style.opacity="0":thumbRef.current.style.opacity="1",thumbRef.current.style.transform=`translate3d(0, ${offset}px, 0)`}},onWheelScroll:scrollPos=>{context.viewport&&(context.viewport.scrollTop=scrollPos)},onDragScroll:pointerPos=>{context.viewport&&(context.viewport.scrollTop=getScrollPosition(pointerPos))}}):null}));ScrollAreaScrollbarVisible.displayName="@mantine/core/ScrollAreaScrollbarVisible";const ScrollAreaScrollbarAuto=(0,react.forwardRef)(((props,ref)=>{const context=useScrollAreaContext(),{forceMount,...scrollbarProps}=props,[visible,setVisible]=(0,react.useState)(!1),isHorizontal="horizontal"===props.orientation,handleResize=useDebouncedCallback((()=>{if(context.viewport){const isOverflowX=context.viewport.offsetWidth<context.viewport.scrollWidth,isOverflowY=context.viewport.offsetHeight<context.viewport.scrollHeight;setVisible(isHorizontal?isOverflowX:isOverflowY)}}),10);return useResizeObserver(context.viewport,handleResize),useResizeObserver(context.content,handleResize),forceMount||visible?(0,jsx_runtime.jsx)(ScrollAreaScrollbarVisible,{"data-state":visible?"visible":"hidden",...scrollbarProps,ref}):null}));ScrollAreaScrollbarAuto.displayName="@mantine/core/ScrollAreaScrollbarAuto";const ScrollAreaScrollbarHover=(0,react.forwardRef)(((props,ref)=>{const{forceMount,...scrollbarProps}=props,context=useScrollAreaContext(),[visible,setVisible]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{const{scrollArea}=context;let hideTimer=0;if(scrollArea){const handlePointerEnter=()=>{window.clearTimeout(hideTimer),setVisible(!0)},handlePointerLeave=()=>{hideTimer=window.setTimeout((()=>setVisible(!1)),context.scrollHideDelay)};return scrollArea.addEventListener("pointerenter",handlePointerEnter),scrollArea.addEventListener("pointerleave",handlePointerLeave),()=>{window.clearTimeout(hideTimer),scrollArea.removeEventListener("pointerenter",handlePointerEnter),scrollArea.removeEventListener("pointerleave",handlePointerLeave)}}}),[context.scrollArea,context.scrollHideDelay]),forceMount||visible?(0,jsx_runtime.jsx)(ScrollAreaScrollbarAuto,{"data-state":visible?"visible":"hidden",...scrollbarProps,ref}):null}));ScrollAreaScrollbarHover.displayName="@mantine/core/ScrollAreaScrollbarHover";const ScrollAreaScrollbarScroll=(0,react.forwardRef)(((props,red)=>{const{forceMount,...scrollbarProps}=props,context=useScrollAreaContext(),isHorizontal="horizontal"===props.orientation,[state,setState]=(0,react.useState)("hidden"),debounceScrollEnd=useDebouncedCallback((()=>setState("idle")),100);return(0,react.useEffect)((()=>{if("idle"===state){const hideTimer=window.setTimeout((()=>setState("hidden")),context.scrollHideDelay);return()=>window.clearTimeout(hideTimer)}}),[state,context.scrollHideDelay]),(0,react.useEffect)((()=>{const{viewport}=context,scrollDirection=isHorizontal?"scrollLeft":"scrollTop";if(viewport){let prevScrollPos=viewport[scrollDirection];const handleScroll=()=>{const scrollPos=viewport[scrollDirection];prevScrollPos!==scrollPos&&(setState("scrolling"),debounceScrollEnd()),prevScrollPos=scrollPos};return viewport.addEventListener("scroll",handleScroll),()=>viewport.removeEventListener("scroll",handleScroll)}}),[context.viewport,isHorizontal,debounceScrollEnd]),forceMount||"hidden"!==state?(0,jsx_runtime.jsx)(ScrollAreaScrollbarVisible,{"data-state":"hidden"===state?"hidden":"visible",...scrollbarProps,ref:red,onPointerEnter:composeEventHandlers(props.onPointerEnter,(()=>setState("interacting"))),onPointerLeave:composeEventHandlers(props.onPointerLeave,(()=>setState("idle")))}):null})),ScrollAreaScrollbar=(0,react.forwardRef)(((props,forwardedRef)=>{const{forceMount,...scrollbarProps}=props,context=useScrollAreaContext(),{onScrollbarXEnabledChange,onScrollbarYEnabledChange}=context,isHorizontal="horizontal"===props.orientation;return(0,react.useEffect)((()=>(isHorizontal?onScrollbarXEnabledChange(!0):onScrollbarYEnabledChange(!0),()=>{isHorizontal?onScrollbarXEnabledChange(!1):onScrollbarYEnabledChange(!1)})),[isHorizontal,onScrollbarXEnabledChange,onScrollbarYEnabledChange]),"hover"===context.type?(0,jsx_runtime.jsx)(ScrollAreaScrollbarHover,{...scrollbarProps,ref:forwardedRef,forceMount}):"scroll"===context.type?(0,jsx_runtime.jsx)(ScrollAreaScrollbarScroll,{...scrollbarProps,ref:forwardedRef,forceMount}):"auto"===context.type?(0,jsx_runtime.jsx)(ScrollAreaScrollbarAuto,{...scrollbarProps,ref:forwardedRef,forceMount}):"always"===context.type?(0,jsx_runtime.jsx)(ScrollAreaScrollbarVisible,{...scrollbarProps,ref:forwardedRef}):null}));ScrollAreaScrollbar.displayName="@mantine/core/ScrollAreaScrollbar";const Thumb=(0,react.forwardRef)(((props,forwardedRef)=>{const{style,...others}=props,scrollAreaContext=useScrollAreaContext(),scrollbarContext=useScrollbarContext(),{onThumbPositionChange}=scrollbarContext,composedRef=(0,use_merged_ref.pc)(forwardedRef,(node=>scrollbarContext.onThumbChange(node))),removeUnlinkedScrollListenerRef=(0,react.useRef)(),debounceScrollEnd=useDebouncedCallback((()=>{removeUnlinkedScrollListenerRef.current&&(removeUnlinkedScrollListenerRef.current(),removeUnlinkedScrollListenerRef.current=void 0)}),100);return(0,react.useEffect)((()=>{const{viewport}=scrollAreaContext;if(viewport){const handleScroll=()=>{if(debounceScrollEnd(),!removeUnlinkedScrollListenerRef.current){const listener=function addUnlinkedScrollListener(node,handler=()=>{}){let prevPosition={left:node.scrollLeft,top:node.scrollTop},rAF=0;return function loop(){const position={left:node.scrollLeft,top:node.scrollTop},isHorizontalScroll=prevPosition.left!==position.left,isVerticalScroll=prevPosition.top!==position.top;(isHorizontalScroll||isVerticalScroll)&&handler(),prevPosition=position,rAF=window.requestAnimationFrame(loop)}(),()=>window.cancelAnimationFrame(rAF)}(viewport,onThumbPositionChange);removeUnlinkedScrollListenerRef.current=listener,onThumbPositionChange()}};return onThumbPositionChange(),viewport.addEventListener("scroll",handleScroll),()=>viewport.removeEventListener("scroll",handleScroll)}}),[scrollAreaContext.viewport,debounceScrollEnd,onThumbPositionChange]),(0,jsx_runtime.jsx)("div",{"data-state":scrollbarContext.hasThumb?"visible":"hidden",...others,ref:composedRef,style:{width:"var(--sa-thumb-width)",height:"var(--sa-thumb-height)",...style},onPointerDownCapture:composeEventHandlers(props.onPointerDownCapture,(event=>{const thumbRect=event.target.getBoundingClientRect(),x=event.clientX-thumbRect.left,y=event.clientY-thumbRect.top;scrollbarContext.onThumbPointerDown({x,y})})),onPointerUp:composeEventHandlers(props.onPointerUp,scrollbarContext.onThumbPointerUp)})}));Thumb.displayName="@mantine/core/ScrollAreaThumb";const ScrollAreaThumb=(0,react.forwardRef)(((props,forwardedRef)=>{const{forceMount,...thumbProps}=props,scrollbarContext=useScrollbarContext();return forceMount||scrollbarContext.hasThumb?(0,jsx_runtime.jsx)(Thumb,{ref:forwardedRef,...thumbProps}):null}));ScrollAreaThumb.displayName="@mantine/core/ScrollAreaThumb";const ScrollAreaViewport=(0,react.forwardRef)((({children,style,...others},ref)=>{const ctx=useScrollAreaContext(),rootRef=(0,use_merged_ref.pc)(ref,ctx.onViewportChange);return(0,jsx_runtime.jsx)(Box.a,{...others,ref:rootRef,style:{overflowX:ctx.scrollbarXEnabled?"scroll":"hidden",overflowY:ctx.scrollbarYEnabled?"scroll":"hidden",...style},children:(0,jsx_runtime.jsx)("div",{style:{minWidth:"100%",display:"table"},ref:ctx.onContentChange,children})})}));ScrollAreaViewport.displayName="@mantine/core/ScrollAreaViewport";var ScrollArea_module_css_classes={root:"m_d57069b5",viewport:"m_c0783ff9",viewportInner:"m_f8f631dd",scrollbar:"m_c44ba933",thumb:"m_d8b5e363",corner:"m_21657268"};const ScrollArea_defaultProps={scrollHideDelay:1e3,type:"hover",scrollbars:"xy"},ScrollArea_varsResolver=(0,create_vars_resolver.V)(((_,{scrollbarSize})=>({root:{"--scrollarea-scrollbar-size":(0,rem.D)(scrollbarSize)}}))),ScrollArea=(0,factory.P9)(((_props,ref)=>{const props=(0,use_props.Y)("ScrollArea",ScrollArea_defaultProps,_props),{classNames,className,style,styles,unstyled,scrollbarSize,vars,type,scrollHideDelay,viewportProps,viewportRef,onScrollPositionChange,children,offsetScrollbars,scrollbars,onBottomReached,onTopReached,...others}=props,[scrollbarHovered,setScrollbarHovered]=(0,react.useState)(!1),getStyles=(0,use_styles.I)({name:"ScrollArea",props,classes:ScrollArea_module_css_classes,className,style,classNames,styles,unstyled,vars,varsResolver:ScrollArea_varsResolver});return(0,jsx_runtime.jsxs)(ScrollAreaRoot,{type:"never"===type?"always":type,scrollHideDelay,ref,scrollbars,...getStyles("root"),...others,children:[(0,jsx_runtime.jsx)(ScrollAreaViewport,{...viewportProps,...getStyles("viewport",{style:viewportProps?.style}),ref:viewportRef,"data-offset-scrollbars":!0===offsetScrollbars?"xy":offsetScrollbars||void 0,"data-scrollbars":scrollbars||void 0,onScroll:e=>{viewportProps?.onScroll?.(e),onScrollPositionChange?.({x:e.currentTarget.scrollLeft,y:e.currentTarget.scrollTop});const{scrollTop,scrollHeight,clientHeight}=e.currentTarget;scrollTop-(scrollHeight-clientHeight)>=0&&onBottomReached?.(),0===scrollTop&&onTopReached?.()},children}),("xy"===scrollbars||"x"===scrollbars)&&(0,jsx_runtime.jsx)(ScrollAreaScrollbar,{...getStyles("scrollbar"),orientation:"horizontal","data-hidden":"never"===type||void 0,forceMount:!0,onMouseEnter:()=>setScrollbarHovered(!0),onMouseLeave:()=>setScrollbarHovered(!1),children:(0,jsx_runtime.jsx)(ScrollAreaThumb,{...getStyles("thumb")})}),("xy"===scrollbars||"y"===scrollbars)&&(0,jsx_runtime.jsx)(ScrollAreaScrollbar,{...getStyles("scrollbar"),orientation:"vertical","data-hidden":"never"===type||void 0,forceMount:!0,onMouseEnter:()=>setScrollbarHovered(!0),onMouseLeave:()=>setScrollbarHovered(!1),children:(0,jsx_runtime.jsx)(ScrollAreaThumb,{...getStyles("thumb")})}),(0,jsx_runtime.jsx)(ScrollAreaCorner,{...getStyles("corner"),"data-hovered":scrollbarHovered||void 0,"data-hidden":"never"===type||void 0})]})}));ScrollArea.displayName="@mantine/core/ScrollArea";const ScrollAreaAutosize=(0,factory.P9)(((props,ref)=>{const{children,classNames,styles,scrollbarSize,scrollHideDelay,type,dir,offsetScrollbars,viewportRef,onScrollPositionChange,unstyled,variant,viewportProps,scrollbars,style,vars,onBottomReached,onTopReached,...others}=(0,use_props.Y)("ScrollAreaAutosize",ScrollArea_defaultProps,props);return(0,jsx_runtime.jsx)(Box.a,{...others,ref,style:[{display:"flex",overflow:"auto"},style],children:(0,jsx_runtime.jsx)(Box.a,{style:{display:"flex",flexDirection:"column",flex:1},children:(0,jsx_runtime.jsx)(ScrollArea,{classNames,styles,scrollHideDelay,scrollbarSize,type,dir,offsetScrollbars,viewportRef,onScrollPositionChange,unstyled,variant,viewportProps,vars,scrollbars,onBottomReached,onTopReached,children})})})}));function isOptionsGroup(item){return"group"in item}function defaultOptionsFilter({options,search,limit}){const parsedSearch=search.trim().toLowerCase(),result=[];for(let i=0;i<options.length;i+=1){const item=options[i];if(result.length===limit)return result;isOptionsGroup(item)&&result.push({group:item.group,items:defaultOptionsFilter({options:item.items,search,limit:limit-result.length})}),isOptionsGroup(item)||item.label.toLowerCase().includes(parsedSearch)&&result.push(item)}return result}function validateOptions(options,valuesSet=new Set){if(Array.isArray(options))for(const option of options)if(isOptionsGroup(option))validateOptions(option.items,valuesSet);else{if(void 0===option.value)throw new Error("[@mantine/core] Each option must have value property");if("string"!=typeof option.value)throw new Error("[@mantine/core] Option value must be a string, other data formats are not supported, got "+typeof option.value);if(valuesSet.has(option.value))throw new Error(`[@mantine/core] Duplicate options are not supported. Option with value "${option.value}" was provided more than once`);valuesSet.add(option.value)}}function Option({data,withCheckIcon,value,checkIconPosition,unstyled,renderOption}){if(!isOptionsGroup(data)){const checked=function isValueChecked(value,optionValue){return Array.isArray(value)?value.includes(optionValue):value===optionValue}(value,data.value),check=withCheckIcon&&checked&&(0,jsx_runtime.jsx)(CheckIcon,{className:classes.optionsDropdownCheckIcon}),defaultContent=(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["left"===checkIconPosition&&check,(0,jsx_runtime.jsx)("span",{children:data.label}),"right"===checkIconPosition&&check]});return(0,jsx_runtime.jsx)(Combobox.Option,{value:data.value,disabled:data.disabled,className:(0,clsx.A)({[classes.optionsDropdownOption]:!unstyled}),"data-reverse":"right"===checkIconPosition||void 0,"data-checked":checked||void 0,"aria-selected":checked,active:checked,children:"function"==typeof renderOption?renderOption({option:data,checked}):defaultContent})}const options=data.items.map((item=>(0,jsx_runtime.jsx)(Option,{data:item,value,unstyled,withCheckIcon,checkIconPosition,renderOption},item.value)));return(0,jsx_runtime.jsx)(Combobox.Group,{label:data.group,children:options})}function OptionsDropdown({data,hidden,hiddenWhenEmpty,filter,search,limit,maxDropdownHeight,withScrollArea=!0,filterOptions=!0,withCheckIcon=!1,value,checkIconPosition,nothingFoundMessage,unstyled,labelId,renderOption,scrollAreaProps,"aria-label":ariaLabel}){validateOptions(data);const filteredData="string"==typeof search?(filter||defaultOptionsFilter)({options:data,search:filterOptions?search:"",limit:limit??1/0}):data,isEmpty=function isEmptyComboboxData(data){if(0===data.length)return!0;for(const item of data){if(!("group"in item))return!1;if(item.items.length>0)return!1}return!0}(filteredData),options=filteredData.map((item=>(0,jsx_runtime.jsx)(Option,{data:item,withCheckIcon,value,checkIconPosition,unstyled,renderOption},isOptionsGroup(item)?item.group:item.value)));return(0,jsx_runtime.jsx)(Combobox.Dropdown,{hidden:hidden||hiddenWhenEmpty&&isEmpty,children:(0,jsx_runtime.jsxs)(Combobox.Options,{labelledBy:labelId,"aria-label":ariaLabel,children:[withScrollArea?(0,jsx_runtime.jsx)(ScrollArea.Autosize,{mah:maxDropdownHeight??220,type:"scroll",scrollbarSize:"var(--combobox-padding)",offsetScrollbars:"y",...scrollAreaProps,children:options}):options,isEmpty&&nothingFoundMessage&&(0,jsx_runtime.jsx)(Combobox.Empty,{children:nothingFoundMessage})]})})}ScrollArea.classes=ScrollArea_module_css_classes,ScrollAreaAutosize.displayName="@mantine/core/ScrollAreaAutosize",ScrollAreaAutosize.classes=ScrollArea_module_css_classes,ScrollArea.Autosize=ScrollAreaAutosize;var InputBase=__webpack_require__("./node_modules/@mantine/core/esm/components/InputBase/InputBase.mjs");const Select_defaultProps={searchable:!1,withCheckIcon:!0,allowDeselect:!0,checkIconPosition:"left"},Select=(0,factory.P9)(((_props,ref)=>{const props=(0,use_props.Y)("Select",Select_defaultProps,_props),{classNames,styles,unstyled,vars,dropdownOpened,defaultDropdownOpened,onDropdownClose,onDropdownOpen,onFocus,onBlur,onClick,onChange,data,value,defaultValue,selectFirstOptionOnChange,onOptionSubmit,comboboxProps,readOnly,disabled,filter,limit,withScrollArea,maxDropdownHeight,size,searchable,rightSection,checkIconPosition,withCheckIcon,nothingFoundMessage,name,form,searchValue,defaultSearchValue,onSearchChange,allowDeselect,error,rightSectionPointerEvents,id,clearable,clearButtonProps,hiddenInputProps,renderOption,onClear,autoComplete,scrollAreaProps,...others}=props,parsedData=(0,react.useMemo)((()=>getParsedComboboxData(data)),[data]),optionsLockup=(0,react.useMemo)((()=>getOptionsLockup(parsedData)),[parsedData]),_id=(0,use_id.B)(id),[_value,setValue,controlled]=(0,use_uncontrolled.Z)({value,defaultValue,finalValue:null,onChange}),selectedOption="string"==typeof _value?optionsLockup[_value]:void 0,previousSelectedOption=function usePrevious(value){const ref=(0,react.useRef)();return(0,react.useEffect)((()=>{ref.current=value}),[value]),ref.current}(selectedOption),[search,setSearch]=(0,use_uncontrolled.Z)({value:searchValue,defaultValue:defaultSearchValue,finalValue:selectedOption?selectedOption.label:"",onChange:onSearchChange}),combobox=useCombobox({opened:dropdownOpened,defaultOpened:defaultDropdownOpened,onDropdownOpen:()=>{onDropdownOpen?.(),combobox.updateSelectedOptionIndex("active",{scrollIntoView:!0})},onDropdownClose:()=>{onDropdownClose?.(),combobox.resetSelectedOption()}}),{resolvedClassNames,resolvedStyles}=(0,use_resolved_styles_api.Y)({props,styles,classNames});(0,react.useEffect)((()=>{selectFirstOptionOnChange&&combobox.selectFirstOption()}),[selectFirstOptionOnChange,_value]),(0,react.useEffect)((()=>{null===value&&setSearch(""),"string"!=typeof value||!selectedOption||previousSelectedOption?.value===selectedOption.value&&previousSelectedOption?.label===selectedOption.label||setSearch(selectedOption.label)}),[value,selectedOption]);const clearButton=clearable&&!!_value&&!disabled&&!readOnly&&(0,jsx_runtime.jsx)(Combobox.ClearButton,{size,...clearButtonProps,onClear:()=>{setValue(null,null),setSearch(""),onClear?.()}});return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(Combobox,{store:combobox,__staticSelector:"Select",classNames:resolvedClassNames,styles:resolvedStyles,unstyled,readOnly,onOptionSubmit:val=>{onOptionSubmit?.(val);const optionLockup=allowDeselect&&optionsLockup[val].value===_value?null:optionsLockup[val],nextValue=optionLockup?optionLockup.value:null;nextValue!==_value&&setValue(nextValue,optionLockup),!controlled&&setSearch("string"==typeof nextValue&&optionLockup?.label||""),combobox.closeDropdown()},size,...comboboxProps,children:[(0,jsx_runtime.jsx)(Combobox.Target,{targetType:searchable?"input":"button",autoComplete,children:(0,jsx_runtime.jsx)(InputBase.O,{id:_id,ref,rightSection:rightSection||clearButton||(0,jsx_runtime.jsx)(Combobox.Chevron,{size,error,unstyled}),rightSectionPointerEvents:rightSectionPointerEvents||(clearButton?"all":"none"),...others,size,__staticSelector:"Select",disabled,readOnly:readOnly||!searchable,value:search,onChange:event=>{setSearch(event.currentTarget.value),combobox.openDropdown(),selectFirstOptionOnChange&&combobox.selectFirstOption()},onFocus:event=>{searchable&&combobox.openDropdown(),onFocus?.(event)},onBlur:event=>{searchable&&combobox.closeDropdown(),setSearch(null!=_value&&optionsLockup[_value]?.label||""),onBlur?.(event)},onClick:event=>{searchable?combobox.openDropdown():combobox.toggleDropdown(),onClick?.(event)},classNames:resolvedClassNames,styles:resolvedStyles,unstyled,pointer:!searchable,error})}),(0,jsx_runtime.jsx)(OptionsDropdown,{data:parsedData,hidden:readOnly||disabled,filter,search,limit,hiddenWhenEmpty:!nothingFoundMessage,withScrollArea,maxDropdownHeight,filterOptions:searchable&&selectedOption?.label!==search,value:_value,checkIconPosition,withCheckIcon,nothingFoundMessage,unstyled,labelId:others.label?`${_id}-label`:void 0,"aria-label":others.label?void 0:others["aria-label"],renderOption,scrollAreaProps})]}),(0,jsx_runtime.jsx)(Combobox.HiddenInput,{value:_value,name,form,disabled,...hiddenInputProps})]})}));Select.classes={...InputBase.O.classes,...Combobox.classes},Select.displayName="@mantine/core/Select"}}]);