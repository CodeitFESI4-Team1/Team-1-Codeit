"use strict";(self.webpackChunkcrewcrew=self.webpackChunkcrewcrew||[]).push([[363],{"./src/components/common/header/header.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Home:()=>Home,LoginPage:()=>LoginPage,MyCrew:()=>MyCrew,MyGathering:()=>MyGathering,WithToggleCookie:()=>WithToggleCookie,__namedExportsOrder:()=>__namedExportsOrder,default:()=>header_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),navigation=__webpack_require__("./node_modules/@storybook/nextjs/dist/export-mocks/navigation/index.mjs"),next_link=__webpack_require__("./node_modules/next/link.js"),link_default=__webpack_require__.n(next_link),Menu=__webpack_require__("./node_modules/@mantine/core/esm/components/Menu/Menu.mjs");function HeaderPresenter({hasCookie,handleLogout}){const pathname=(0,navigation.usePathname)();return(0,jsx_runtime.jsx)("header",{className:"sticky top-0 z-10 w-full bg-purple-400 px-6 py-4",children:(0,jsx_runtime.jsxs)("div",{className:"mx-auto flex w-full max-w-screen-lg items-center justify-between",children:[(0,jsx_runtime.jsxs)("div",{className:"flex space-x-3 md:space-x-5 lg:space-x-5",children:[(0,jsx_runtime.jsx)("h1",{className:"font-bold text-white",children:"LOGO"}),(0,jsx_runtime.jsxs)("nav",{className:"flex items-center space-x-3 md:space-x-6 lg:space-x-6",children:[(0,jsx_runtime.jsx)(link_default(),{href:"/",className:("/"===pathname?"text-black":"text-white")+" ml-4 font-bold",children:"모임 찾기"}),hasCookie?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(link_default(),{href:"/my-crew",className:("/my-crew"===pathname?"text-black":"text-white")+" ml-4 font-bold",children:"나의 크루"}),(0,jsx_runtime.jsx)(link_default(),{href:"/my-gathering",className:("/my-gathering"===pathname?"text-black":"text-white")+" ml-4 font-bold",children:"나의 모임"})]}):(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(link_default(),{href:"/login",className:"ml-4 font-bold text-white",children:"나의 크루"}),(0,jsx_runtime.jsx)(link_default(),{href:"/login",className:"ml-4 font-bold text-white",children:"나의 모임"})]})]})]}),hasCookie?(0,jsx_runtime.jsx)("div",{className:"relative",children:(0,jsx_runtime.jsxs)(Menu.W,{trigger:"hover",openDelay:100,closeDelay:400,children:[(0,jsx_runtime.jsx)(Menu.W.Target,{children:(0,jsx_runtime.jsx)("button",{type:"button",className:"flex items-center text-white",children:"프로필"})}),(0,jsx_runtime.jsxs)(Menu.W.Dropdown,{children:[(0,jsx_runtime.jsx)(Menu.W.Item,{component:"a",href:"/profile",children:"마이페이지"}),(0,jsx_runtime.jsx)(Menu.W.Item,{type:"button",onClick:handleLogout,className:"block",children:"로그아웃"})]})]})}):(0,jsx_runtime.jsx)(link_default(),{href:"/login",className:"font-bold text-white",children:"로그인"})]})})}function Header(){const[hasCookie,setHasCookie]=(0,react.useState)(!1),router=(0,navigation.useRouter)();return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(HeaderPresenter,{hasCookie,handleLogout:()=>{setHasCookie(!1),router.push("/")}}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:()=>{setHasCookie((prev=>!prev))},className:"mb-4 bg-blue-500 p-2 text-white",children:"테스트용"})]})}HeaderPresenter.__docgenInfo={description:"",methods:[],displayName:"HeaderPresenter",props:{hasCookie:{required:!0,tsType:{name:"boolean"},description:""},handleLogout:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}},Header.__docgenInfo={description:"Header 컴포넌트\r\n\r\n@param {boolean} hasCookie - 로그인 여부를 나타내는 상태 (true: 로그인됨, false: 비로그인)\r\n@param {function} handleLogout - 로그아웃을 처리하는 함수\r\n@param {function} toggleCookie - 테스트용으로 쿠키 상태를 토글하는 함수 (컴포넌트 실험용)",methods:[],displayName:"Header"};const header_stories={title:"Components/Header",component:Header,tags:["autodocs"],parameters:{nextjs:{appDirectory:!0},docs:{description:{component:"헤더 컴포넌트. 경로에 따라 링크의 글씨 색이 변합니다. 쿠키를 계속 넣을 수 없어 해당 탭에서만 확인할 수 있습니다."}}}};function Template(){return(0,jsx_runtime.jsx)(Header,{})}const Home=Template.bind({});Home.args={hasCookie:!1},Home.parameters={nextjs:{navigation:{pathname:"/",query:{}}},docs:{description:{story:"사용자가 로그아웃 상태이며 기본 경로(/)에 있는 경우"}}};const MyCrew=Template.bind({});MyCrew.args={hasCookie:!0},MyCrew.parameters={nextjs:{navigation:{pathname:"/my-crew",query:{}}},docs:{description:{story:'사용자가 로그인 상태일 때 "나의 크루" 경로로 이동(+테스트용 버튼 클릭)'}}};const MyGathering=Template.bind({});MyGathering.args={hasCookie:!0},MyGathering.parameters={nextjs:{navigation:{pathname:"/my-gathering",query:{}}},docs:{description:{story:'사용자가 로그인 상태일 때 "나의 모임" 경로로 이동(+테스트용 버튼 클릭)'}}};const WithToggleCookie=Template.bind({});WithToggleCookie.args={hasCookie:!1,handleLogout:(0,dist.XI)("Logged out")},WithToggleCookie.parameters={nextjs:{navigation:{pathname:"/",query:{}}},docs:{description:{story:"로그인/로그아웃 상태를 토글하여 네비게이션이 동적으로 변경되는지를 확인"}}};const LoginPage=Template.bind({});LoginPage.args={hasCookie:!1},LoginPage.parameters={nextjs:{navigation:{pathname:"/login",query:{}}},docs:{description:{story:"로그인 페이지에서는 모든 링크가 하얀색으로 보입니다."}}};const __namedExportsOrder=["Home","MyCrew","MyGathering","WithToggleCookie","LoginPage"]}}]);