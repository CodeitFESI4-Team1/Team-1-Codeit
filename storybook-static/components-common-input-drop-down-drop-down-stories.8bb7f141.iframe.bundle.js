"use strict";(self.webpackChunkcrewcrew=self.webpackChunkcrewcrew||[]).push([[764],{"./src/components/common/input/drop-down/drop-down.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Category:()=>Category,Region:()=>Region,Sort:()=>Sort,__namedExportsOrder:()=>__namedExportsOrder,default:()=>drop_down_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),Select=__webpack_require__("./node_modules/@mantine/core/esm/components/Select/Select.mjs");function DropDown({variant,data,value,onChange,placeholder,className}){const[theme,setTheme]=(0,react.useState)("white");return(0,jsx_runtime.jsx)(Select.l,{mt:"md",data,value,onFocus:()=>setTheme("dark"),onBlur:()=>setTheme("white"),onChange,withCheckIcon:!1,leftSection:"sort"===variant&&(0,jsx_runtime.jsxs)("svg",{width:"24",height:"24","aria-hidden":"true",className:"group-focus:fill-white",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,jsx_runtime.jsx)("path",{d:"M3 11L7 7M7 7L11 11M7 7V17",stroke:""+("dark"===theme?"#ffffff":"#D1D5DB"),"stroke-width":"1.8","stroke-linecap":"round"}),(0,jsx_runtime.jsx)("path",{d:"M21 13L17 17M17 17L13 13M17 17V7",stroke:""+("dark"===theme?"#ffffff":"#D1D5DB"),"stroke-width":"1.8","stroke-linecap":"round"})]}),rightSection:"sort"!==variant&&(0,jsx_runtime.jsx)("svg",{width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:(0,jsx_runtime.jsx)("path",{d:"M12.7151 15.4653C12.3975 15.7654 11.9008 15.7654 11.5832 15.4653L5.8047 10.006C5.26275 9.49404 5.6251 8.58286 6.37066 8.58286L17.9276 8.58286C18.6732 8.58286 19.0355 9.49404 18.4936 10.006L12.7151 15.4653Z",fill:""+("dark"===theme?"#ffffff":"#D1D5DB")})}),placeholder,classNames:{wrapper:`${className}`,input:`focus:bg-black focus:placeholder:text-white focus:text-white typo-base-medium rounded-xl border-0 h-11 py-2.5 px-3 placeholder-gray-800 ${"sort"===variant&&"pl-9"}`,section:`end-1 ${"sort"===variant&&"data-[position=right]:hidden start-1"}`,dropdown:"rounded-xl shadow-xl p-0 border-0 mt-2",option:`py-1 m-1 px-2 mr-0 rounded-xl text-gray-800 typo-base-medium hover:bg-blue-100 ${"sort"===variant&&"justify-center"}`},comboboxProps:{position:"bottom",middlewares:{flip:!1,shift:!1},offset:0}})}DropDown.__docgenInfo={description:"",methods:[],displayName:"DropDown",props:{variant:{required:!0,tsType:{name:"union",raw:"'region' | 'category' | 'sort'",elements:[{name:"literal",value:"'region'"},{name:"literal",value:"'category'"},{name:"literal",value:"'sort'"}]},description:""},data:{required:!0,tsType:{name:"union",raw:"ComboboxData | undefined",elements:[{name:"ComboboxData"},{name:"undefined"}]},description:""},placeholder:{required:!0,tsType:{name:"string"},description:""},value:{required:!0,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newValue: string | null, option: ComboboxItem) => void",signature:{arguments:[{type:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},name:"newValue"},{type:{name:"ComboboxItem"},name:"option"}],return:{name:"void"}}},description:""},className:{required:!0,tsType:{name:"string"},description:""}}};const drop_down_stories={title:"Components/input/drop-down",component:DropDown,tags:["autodocs"],argTypes:{className:{description:"컴포넌트 wrapper에 추가하는 클래스명"},value:{description:"선택된 값"},data:{description:"옵션 데이터 배열"},variant:{description:"`region` | `category` | `sort`",control:{type:"radio",option:["region","category","sort"]}},placeholder:{description:"선택된 값이 없을 때 표시하는 문자열"},onChange:{description:"값이 변경될 때 실행하는 함수"}}},Template=function DropDownStory(args){const[value,setValue]=(0,react.useState)(null);return(0,jsx_runtime.jsx)(DropDown,{...args,value,onChange:(newValue,option)=>{setValue(newValue),(0,dist.XI)("onChange")(newValue,option)}})},Region=Template.bind({});Region.args={variant:"region",data:[{value:"option 1",label:"옵션 1"},{value:"option 2",label:"옵션 2"}],placeholder:"지역 전체",value:null,className:"w-[110px]"};const Category=Template.bind({});Category.args={variant:"category",data:[{value:"option 1",label:"옵션 1"},{value:"option 2",label:"옵션 2"}],placeholder:"카테고리 전체",value:null,className:"w-full"};const Sort=Template.bind({});Sort.args={variant:"sort",data:[{value:"latest",label:"최신순"},{value:"best",label:"인기순"}],placeholder:"최신순",value:null,className:"w-[110px]"};const __namedExportsOrder=["Region","Category","Sort"];Region.parameters={...Region.parameters,docs:{...Region.parameters?.docs,source:{originalSource:"function DropDownStory(args: DropDownProps) {\n  const [value, setValue] = useState<string | null>(null);\n  return <DropDown {...args} value={value} onChange={(newValue, option) => {\n    setValue(newValue);\n    action('onChange')(newValue, option); // 액션 로그\n  }} />;\n}",...Region.parameters?.docs?.source}}},Category.parameters={...Category.parameters,docs:{...Category.parameters?.docs,source:{originalSource:"function DropDownStory(args: DropDownProps) {\n  const [value, setValue] = useState<string | null>(null);\n  return <DropDown {...args} value={value} onChange={(newValue, option) => {\n    setValue(newValue);\n    action('onChange')(newValue, option); // 액션 로그\n  }} />;\n}",...Category.parameters?.docs?.source}}},Sort.parameters={...Sort.parameters,docs:{...Sort.parameters?.docs,source:{originalSource:"function DropDownStory(args: DropDownProps) {\n  const [value, setValue] = useState<string | null>(null);\n  return <DropDown {...args} value={value} onChange={(newValue, option) => {\n    setValue(newValue);\n    action('onChange')(newValue, option); // 액션 로그\n  }} />;\n}",...Sort.parameters?.docs?.source}}}}}]);